// Code generated by mockery v2.49.1. DO NOT EDIT.

package tender_test

import (
	model "TenderServiceApi/internal/model"
	context "context"

	mock "github.com/stretchr/testify/mock"
)

// MockorganizationResponsibleFacade is an autogenerated mock type for the organizationResponsibleFacade type
type MockorganizationResponsibleFacade struct {
	mock.Mock
}

// Fetch provides a mock function with given fields: ctx, args
func (_m *MockorganizationResponsibleFacade) Fetch(ctx context.Context, args []byte) (model.OrganizationResponsible, error) {
	ret := _m.Called(ctx, args)

	if len(ret) == 0 {
		panic("no return value specified for Fetch")
	}

	var r0 model.OrganizationResponsible
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, []byte) (model.OrganizationResponsible, error)); ok {
		return rf(ctx, args)
	}
	if rf, ok := ret.Get(0).(func(context.Context, []byte) model.OrganizationResponsible); ok {
		r0 = rf(ctx, args)
	} else {
		r0 = ret.Get(0).(model.OrganizationResponsible)
	}

	if rf, ok := ret.Get(1).(func(context.Context, []byte) error); ok {
		r1 = rf(ctx, args)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// NewMockorganizationResponsibleFacade creates a new instance of MockorganizationResponsibleFacade. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockorganizationResponsibleFacade(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockorganizationResponsibleFacade {
	mock := &MockorganizationResponsibleFacade{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
